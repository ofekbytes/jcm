

01. java keywords
01.01. package -
02.01. import -
02.02. static import - 
03.01. class
04.01. method

.
.
01. java keywords

copy paste ....
.
.
01.01. package -
 
- package name: 
-- backward domain name + program name -or- description topic name.
-- a subject description name 
-- business description topic.
--- example:
    com.domain.myJava

- package name format: lower-case
--- example:
    com.domain.myJava    

- a package make the program code classified into different unit of code. 

-- example:
   com.domain.myJava.example1 
.
.
02.01. import -

- every program file will reuse an exit code 
  by importing that code in to your program files
  
-- example: import class file name "parent" 
   import com.domain.myJava.example1.book.parent 
   
-- example: import all/* class files in a package
   import com.domain.myJava.example1.book.*
.
.
02.02. static import - 

- static import is 

-- example:
   static import org.junit.Assert.*;
.
.
03.01. class

- package name: 
-- description topic/subject name.

- package name format: Capital Letter (start with Capital Letter)
--- example: 
    "Example".
    
- simple program can consist of many code lines, 
  a class make the program code classified into different unit of code.
  
- create a class:
-- class name - Capital Letter.
-- '{' - beginning of the class 
-- '}' - end of the class
-- '{ code; }' - write the code between them.

-- class need to be focus in one subject.
-!- keep your class as small as possible to improve usability and readability.
-!- a class consist/contain of one or more method.

-- example:
   class Car {
   }   
.
.
04.01. method (function)

- method name: 
-- a method description topic/subject name.
--- example:
	add(2,2);
	add("abc","c")
	print("hello");

- method name format: lower case
--- example:
    "example();".

- a class consist/contain of one or more method.
-- a method archive a purpose.
 
- create a method:
-- method name: lower case letter 
--- example: 
    "methodExample".
    
-- method parameters - a method parameters is a variable/s inside method definition.
-- method parameters size: 1-3 parameters.
   
-- '{' - beginning of the method 
-- '}' - closing of the method
-- '{ code; }' - write the code between them.

-- method arguments - when calling a method with input values, 
                      we are calling a method with method arguments.

--- example: method parameters -and- method arguments.
	<Ex_04_01_class_method>
    <Ex_04_02_methodParameterArgument>
    
    
